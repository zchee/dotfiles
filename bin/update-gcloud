#!/usr/bin/env bash
set -euo pipefail

BIN="${0##*-}"

info() { printf "\\x1b[1;34m[INFO]\\x1b[0m %s\\n\\n" "$1"; }
error() { printf "\\x1b[1;31m[ERROR]\\x1b[0m %s\\n\\n" "$1"; }

[[ ! $# -eq 1 ]] && { echo "[ERROR] Usage: $BIN [VERSION]"; exit 1; }
VERSION=$1

OS=$(uname | tr '[:upper:]' '[:lower:]')

_restore_sdk() {
  cp -r /tmp/google-cloud-sdk "$CLOUDSDK_ROOT_DIR"
  rm -rf /tmp/google-cloud-sdk
}

# Take care of signals
_trap_exit() { # Handle trapped signals
  case $1 in
    INT)
      error "interrupted by user"
      _restore_sdk
      exit 100
      ;;
    TERM)
      error "terminated"
      _restore_sdk
      exit 101
      ;;
    *)
      error "Terminating on unknown signal"
      _restore_sdk
      exit 102
      ;;
  esac
}

# Trap signals
trap "_trap_exit INT" INT
trap "_trap_exit TERM" TERM HUP

if [[ -f "$CLOUDSDK_ROOT_DIR/properties" ]]; then
  info "Backup google-cloud-sdk/properties..."
  mv "$CLOUDSDK_ROOT_DIR/properties" /tmp

  info "Backup old google-cloud-sdk..."
  mv "$CLOUDSDK_ROOT_DIR" /tmp
fi


info "Install google-cloud-sdk $VERSION for $OS..."
curl -sSL https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-"$VERSION"-"$OS"-x86_64.tar.gz | tar -C /usr/local -xzf -

info "Install gcloud components..."
/usr/local/google-cloud-sdk/install.sh --usage-reporting=false --command-completion=false --path-update=false --install-python=true --quiet --additional-components \
  alpha \
  app-engine-go \
  app-engine-java \
  app-engine-python \
  app-engine-python-extras \
  beta \
  bq \
  cloud-build-local \
  cloud_sql_proxy \
  config-connector \
  core \
  docker-credential-gcr \
  gcloud-man-pages \
  gsutil \
  kpt \
  kubectl \
  kubectl-oidc \
  kustomize \
  local-extract \
  minikube \
  nomos \
  pkg \
  pubsub-emulator \
  skaffold \
  terraform-validator
  # anthos-auth  \
  # app-engine-php \
  # appctl \
  # bigtable \
  # cbt  \
  # cloud-datastore-emulator  \
  # cloud-firestore-emulator \
  # datalab \
  # emulator-reverse-proxy \

if [[ -f '/tmp/properties' ]]; then
  info "Restore google-cloud-sdk/properties"
  cp /tmp/properties "$CLOUDSDK_ROOT_DIR"
fi

rm -rf /tmp/google-cloud-sdk

info "Successful Install Google Cloud SDK"
exit 0
