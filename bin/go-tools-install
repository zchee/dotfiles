#!/usr/bin/env bash
set -euo pipefail

CWD="$PWD"
if [[ "$CWD" != *'golang.org/x/tools'* ]]; then
  echo 'current directory is not golang.org/x/tools'
  exit 1
fi

GO=${GO:-$(which go)}

export CGO_ENABLED=0
GOCACHE="$(mktemp -d)"
export GOCACHE

buildtags='osusergo,netgo,static'
readonly buildtags

BINARIES="$(go list -f='{{ if eq .Name "main" }}{{ .ImportPath }}{{ end }}' ./... | grep -E -v -e 'cmd/(bundle|getgo(/server)?|stress)' -e 'internal/(lsp/helper|stack/gostacks|play)' | tr '\n' ' ')"
readonly BINARIES

# Install tools binaries
$GO install -v -x -trimpath -tags=${buildtags} -ldflags='-s -w -linkmode internal -buildid= "-extldflags=-static-pie"' ${BINARIES}

# Install gopls
pushd "$(go env GOPATH)/src/golang.org/x/tools/gopls" > /dev/null 2>&1
$GO install -v -x -trimpath -tags=${buildtags} -ldflags='-s -w -linkmode internal -buildid= "-extldflags=-static-pie"' ./
pushd "${CWD}" > /dev/null 2>&1

pushd "$(go env GOPATH)/src/golang.org/x/tools/go/analysis/unitchecker" > /dev/null 2>&1
$GO build -o "$(go env GOPATH)/bin/unitchecker" -v -x -trimpath -tags=${buildtags} -ldflags='-s -w -linkmode internal -buildid= "-extldflags=-static-pie"' main.go
pushd "${CWD}" > /dev/null 2>&1

rm -f $(go env GOPATH)/bin/bundle
