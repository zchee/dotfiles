# -----------------------------------------------------------------------------
# Keyboard shortcuts
#
# For a list of key names, see: http://www.glfw.org/docs/latest/group__keys.html
# For a list of modifier names, see: http://www.glfw.org/docs/latest/group__mods.html

# The value of kitty_mod is used as the modifier for all default shortcuts, you
# can change it in your kitty.conf to change the modifiers for all the default
# shortcuts.
kitty_mod ctrl+shift

#You can use the special action no_op to unmap a keyboard shortcut that is
# assigned in the default configuration.
#
# You can combine multiple actions to be triggered by a single shortcut, using the
# syntax below:
#  map key combine <separator> action1 <separator> action2 <separator> action3 ...
# For example:
#  map kitty_mod+e combine : new_window : next_layout
# this will create a new window and switch to the next available layout

## marks
mark1_foreground white
mark1_background red
mark2_foreground white
mark2_background cyan

# -----------------------------------------------------------------------------
# tmux

# map ctrl+b>v                 kitten grab.py


# -----------------------------------------------------------------------------
# mouse_map

mouse_map shift+super+left click grabbed,ungrabbed mouse_click_url_or_select

# -----------------------------------------------------------------------------
# super (cmd)
 
map super+f1                 toggle_marker iregex 1 \\b\-\-\-\sFAIL\\:\\b
map super+f2                 toggle_marker text 2 INFO
map super+f3                 toggle_marker regex 1 (ERROR|DEBUG)
map super+enter              send_text all \r
# map super+enter              send_text normal \x1b[1;\xd
map super+minus              decrease_font_size
map super+space              restore_font_size
map super+c                  copy_to_clipboard
map super+n                  noop
map super+v                  paste_from_clipboard
map super+w                  noop
map super+,                  new_tab + edit-config
# map super+v                  kitten clipboard --get-clipboard
# map super+colon              no_op
# map super+f1,                send_text all \x1b[1;3P
# map super+f2,                send_text all \x1b[1;3Q
# map super+f3,                send_text all \x1b[1;3R
# map super+f4,                send_text all \x1b[1;3S
# map super+f5,                send_text all \x1b[15;3~
# map super+f6,                send_text all \x1b[17;3~
# map super+f7,                send_text all \x1b[18;3~
# map super+f8,                send_text all \x1b[19;3~
# map super+f9,                send_text all \x1b[20;3~
# map super+f10,               send_text all \x1b[21;3~
# map super+f11,               send_text all \x1b[23;3~
# map super+f12,               send_text all \x1b[24;3~

# -----------------------------------------------------------------------------
# super+ctrl

map super+ctrl+f             toggle_fullscreen

# -----------------------------------------------------------------------------
# super+shift

# map super+shift+b            move_window_backward
# map super+shift+f            move_window_forward
# map super+shift+l            next_layout
map super+shift+n            new_os_window
# map super+shift+q            close_window
# map super+shift+t            new_tab
map super+shift+w            close_window
# map super+shift+,            move_tab_backward
# map super+shift+.            move_tab_forward
# map super+shift+`            move_window_to_top
# map super+shift+enter        toggle_fullscreen
# map super+shift+equal        increase_font_size
# map super+shift+left         previous_tab
# map super+shift+right        next_tab
# map super+shift+space        new_window

# -----------------------------------------------------------------------------
# super+alt

# map super+alt+1              goto_tab 1
# map super+alt+2              goto_tab 2
# map super+alt+right          next_window
# map super+alt+left           previous_window

# -----------------------------------------------------------------------------
# shift

# TODO: dig enter ascii code
map shift+enter              send_text all \r
# map shift+insert             send_text all \x1b[1;\x1b[2~

## function keys
# map shift+f1,                send_text all \x1b[1;2P
# map shift+f2,                send_text all \x1b[1;2Q
# map shift+f3,                send_text all \x1b[1;2R
# map shift+f4,                send_text all \x1b[1;2S
# map shift+f5,                send_text all \x1b[15;2~
# map shift+f6,                send_text all \x1b[17;2~
# map shift+f7,                send_text all \x1b[18;2~
# map shift+f8,                send_text all \x1b[19;2~
# map shift+f9,                send_text all \x1b[20;2~
# map shift+f10,               send_text all \x1b[21;2~
# map shift+f11,               send_text all \x1b[23;2~
# map shift+f12,               send_text all \x1b[24;2~

# -----------------------------------------------------------------------------
# alt

# map alt+enter                  new_window
# map alt+f1,                  send_text all \x1b[1;6P
# map alt+f2,                  send_text all \x1b[1;6Q
# map alt+f3,                  send_text all \x1b[1;6R
# map alt+f4,                  send_text all \x1b[1;6S
# map alt+f5,                  send_text all \x1b[15;6~
# map alt+f6,                  send_text all \x1b[17;6~
# map alt+f7,                  send_text all \x1b[18;6~
# map alt+f8,                  send_text all \x1b[19;6~
# map alt+f9,                  send_text all \x1b[20;6~
# map alt+f10,                 send_text all \x1b[21;6~
# map alt+f11,                 send_text all \x1b[23;6~
# map alt+f12,                 send_text all \x1b[24;6~

# -----------------------------------------------------------------------------
# ctrl

# map ctrl+enter                 send_text all \x1b[13;5u
map ctrl+right                 send_text all \x1b[1;5C
map ctrl+left                  send_text all \x1b[1;5D
map ctrl+down                  send_text all \x1b[1;5B
map ctrl+up                    send_text all \x1b[1;5A
# map ctrl+f1,                 send_text all \x1b[1;5P
# map ctrl+f2,                 send_text all \x1b[1;5Q
# map ctrl+f3,                 send_text all \x1b[1;5R
# map ctrl+f4,                 send_text all \x1b[1;5S
# map ctrl+f5,                 send_text all \x1b[15;5~
# map ctrl+f6,                 send_text all \x1b[17;5~
# map ctrl+f7,                 send_text all \x1b[18;5~
# map ctrl+f8,                 send_text all \x1b[19;5~
# map ctrl+f9,                 send_text all \x1b[20;5~
# map ctrl+f10,                send_text all \x1b[21;5~
# map ctrl+f11,                send_text all \x1b[23;5~
# map ctrl+f12,                send_text all \x1b[24;5~

# -----------------------------------------------------------------------------
# kitty_mod(ctrl+shift)

map ctrl+shift+space          no_op
map ctrl+shift+apostrophe     send_text all \x1b[1;\x27
map ctrl+shift+comma          send_text all \x1b[1;\x2c
map ctrl+shift+minus          no_op
map ctrl+shift+period         send_text all \x1b[1;\x2e
map ctrl+shift+slash          send_text all \x1b[1;\x2f
map ctrl+shift+0              send_text all \x1b[1;\x01
map ctrl+shift+1              send_text all \x1b[1;\x02
map ctrl+shift+2              send_text all \x1b[1;\x03
map ctrl+shift+3              send_text all \x1b[1;\x04
map ctrl+shift+4              send_text all \x1b[1;\x05
map ctrl+shift+5              send_text all \x1b[1;\x06
map ctrl+shift+6              send_text all \x1b[1;\x07
map ctrl+shift+7              send_text all \x1b[1;\x08
map ctrl+shift+8              send_text all \x1b[1;\x09
map ctrl+shift+9              send_text all \x1b[1;\x0a
map ctrl+shift+semicolon      send_text all \x1b[1;\x3b
map ctrl+shift+equal          send_text all \x1b[1;\x3d
map ctrl+shift+a              send_text all \x1b[1;\x01
map ctrl+shift+b              send_text all \x1b[1;\x02
map ctrl+shift+c              send_text all \x1b[1;\x03
map ctrl+shift+d              send_text all \x1b[1;\x04
# map ctrl+shift+e              send_text all \x1b[1;\x05
map ctrl+shift+e              edit_config_file
map ctrl+shift+f              send_text all \x1b[1;\x06
# map ctrl+shift+g              send_text all \x1b[1;\x07
# map ctrl+shift+h              send_text all \x1b[1;\x08
map ctrl+shift+h              show_scrollback
map ctrl+shift+i              send_text all \x1b[1;\x09
map ctrl+shift+j              send_text all \x1b[1;\x0a
map ctrl+shift+k              send_text all \x1b[1;\x0b
map ctrl+shift+l              send_text all \x1b[1;\x0c
map ctrl+shift+m              send_text all \x1b[1;\x0d
map ctrl+shift+n              send_text all \x1b[1;\x0e
map ctrl+shift+o              send_text all \x1b[1;\x0f
map ctrl+shift+p              send_text all \x1b[1;\x10
map ctrl+shift+q              send_text all \x1b[1;\x11
map ctrl+shift+r              send_text all \x1b[1;\x12
map ctrl+shift+s              send_text all \x1b[1;\x13
map ctrl+shift+t              send_text all \x1b[1;\x14
map ctrl+shift+u              send_text all \x1b[1;\x15
map ctrl+shift+v              send_text all \x1b[1;\x16
map ctrl+shift+w              send_text all \x1b[1;\x17
# map ctrl+shift+x              send_text all \x1b[1;\x18
map ctrl+shift+y              send_text all \x1b[1;\x19
# map ctrl+shift+z              send_text all \x1b[1;\x1a
map ctrl+shift+f1             no_op
map ctrl+shift+f2             no_op
map ctrl+shift+f3             no_op
map ctrl+shift+f4             no_op
map ctrl+shift+f5             load_config_file
map ctrl+shift+f6             debug_config
map ctrl+shift+f7             no_op
map ctrl+shift+f8             no_op
map ctrl+shift+f9             no_op
map ctrl+shift+f10            no_op
map ctrl+shift+f11            no_op
map ctrl+shift+f12            no_op
map ctrl+shift+left_bracket   send_text all \x1b[1;\x1b
map ctrl+shift+backslash      send_text all \x1b[1;\x1c
map ctrl+shift+right_bracket  send_text all \x1b[1;\x1d
map ctrl+shift+grave_accent   send_text all \x1b[1;\x60
map ctrl+shift+backspace      send_text all \x1b[1;\x7f
# map ctrl+shift+escape         send_text all \x1b[1;\x2c
# map ctrl+shift+enter          send_text all \x1b[1;\x2c
# map ctrl+shift+tab            send_text all \x1b[1;\x2c
# map ctrl+shift+intert         send_text all \x1b[1;\x2c
# map ctrl+shift+delete         send_text all \x1b[1;\x2c
map ctrl+shift+right          send_text all \x1b[1;6C
map ctrl+shift+left           send_text all \x1b[1;6D
map ctrl+shift+down           send_text all \x1b[1;6B
map ctrl+shift+up             send_text all \x1b[1;6A
map ctrl+shift+page_up        send_text all \x1b[1;\x1b[5~
map ctrl+shift+page_down      send_text all \x1b[1;\x1b[6~
map ctrl+shift+home           send_text all \x1b[1;\x1b[1~
map ctrl+shift+end            send_text all \x1b[1;\x1b[4~
# map ctrl+shift+?              send_text all \x1b[1;\x7f
# map ctrl+shift+^              send_text all \x1b[1;\x1e
# map ctrl+shift+_              send_text all \x1b[1;\x1f
# map ctrl+shift+caps_lock      send_text all \x1b[1;\x2c
# map ctrl+shift+scroll_lock    send_text all \x1b[1;\x2c
# map ctrl+shift+num_lock       send_text all \x1b[1;\x2c
# map ctrl+shift+print_screen   send_text all \x1b[1;\x2c

# -----------------------------------------------------------------------------
# default Keyboard shortcuts:
#
# For a list of key names, see: GLFW keys
# <http://www.glfw.org/docs/latest/group__keys.html>. The name to use
# is the part after the GLFW_KEY_ prefix. For a list of modifier
# names, see: GLFW mods
# <http://www.glfw.org/docs/latest/group__mods.html>
#
# On Linux you can also use XKB key names to bind keys that are not
# supported by GLFW. See XKB keys
# <https://github.com/xkbcommon/libxkbcommon/blob/master/xkbcommon/xkbcommon-
# keysyms.h> for a list of key names. The name to use is the part
# after the XKB_KEY_ prefix. Note that you should only use an XKB key
# name for keys that are not present in the list of GLFW keys.
#
# You can use the special action no_op to unmap a keyboard shortcut
# that is assigned in the default configuration.
#
# You can combine multiple actions to be triggered by a single
# shortcut, using the syntax below::
#
#     map key combine <separator> action1 <separator> action2 <separator> action3 ...
#
# For example::
#
#     map kitty_mod+e combine : new_window : next_layout
#
# this will create a new window and switch to the next available
# layout
#
# You can use multi-key shortcuts using the syntax shown below::
#
#     map key1>key2>key3 action
#
# For example::
#
#     map ctrl+f>2 set_font_size 20
#
# kitty_mod ctrl+shift
#
# The value of kitty_mod is used as the modifier for all default
# shortcuts, you can change it in your kitty.conf to change the
# modifiers for all the default shortcuts.
#
# clear_all_shortcuts no
#
# You can have kitty remove all shortcut definition seen up to this
# point. Useful, for instance, to remove the default shortcuts.
#
# -----------------------------------------------------------------------------
# Clipboard
#
# map cmd+c        copy_to_clipboard
# map kitty_mod+c  copy_to_clipboard
# map cmd+v        paste_from_clipboard
# map kitty_mod+v  paste_from_clipboard
# map kitty_mod+s  paste_from_selection
# map shift+insert paste_from_selection
# map kitty_mod+o  pass_selection_to_program
#
# You can also pass the contents of the current selection to any
# program using pass_selection_to_program. By default, the system's
# open program is used, but you can specify your own, for example::
#
#     map kitty_mod+o pass_selection_to_program firefox
#
# You can pass the current selection to a terminal program running in
# a new kitty window, by using the @selection placeholder::
#
#     map kitty_mod+y new_window less @selection
#
# -----------------------------------------------------------------------------
# Scrolling
#
# map kitty_mod+up        scroll_line_up
# map kitty_mod+k         scroll_line_up
# map kitty_mod+down      scroll_line_down
# map kitty_mod+j         scroll_line_down
# map kitty_mod+page_up   scroll_page_up
# map kitty_mod+page_down scroll_page_down
# map kitty_mod+home      scroll_home
# map kitty_mod+end       scroll_end
# map kitty_mod+h         show_scrollback
#
# You can send the contents of the current screen + history buffer as
# stdin to an arbitrary program using the placeholders @text (which
# is the plain text) and @ansi (which includes text styling escape
# codes). For only the current screen, use @screen or @ansi_screen.
# For example, the following command opens the scrollback buffer in
# less in a new window::
#
#   map kitty_mod+y new_window @ansi less +G -R
#
# -----------------------------------------------------------------------------
# Window management
#
# map kitty_mod+enter new_window
#
# You can open a new window running an arbitrary program, for
# example::
#
#     map kitty_mod+y      new_window mutt
#
# You can open a new window with the current working directory set to
# the working directory of the current window using::
#
#     map ctrl+alt+enter    new_window_with_cwd
#
# You can open a new window that is allowed to control kitty via the
# kitty remote control facility by prefixing the command line with @.
# Any programs running in that window will be allowed to control
# kitty. For example::
#
#     map ctrl+enter new_window @ some_program
#
# map cmd+n       new_os_window
# map kitty_mod+n new_os_window
# map kitty_mod+w close_window
# map kitty_mod+] next_window
# map kitty_mod+[ previous_window
# map kitty_mod+f move_window_forward
# map kitty_mod+b move_window_backward
# map kitty_mod+` move_window_to_top
# map kitty_mod+r start_resizing_window
# map kitty_mod+1 first_window
# map kitty_mod+2 second_window
# map kitty_mod+3 third_window
# map kitty_mod+4 fourth_window
# map kitty_mod+5 fifth_window
# map kitty_mod+6 sixth_window
# map kitty_mod+7 seventh_window
# map kitty_mod+8 eighth_window
# map kitty_mod+9 ninth_window
# map kitty_mod+0 tenth_window

# -----------------------------------------------------------------------------
# Tab management

# map kitty_mod+right next_tab
# map kitty_mod+left  previous_tab
# map kitty_mod+t     new_tab
# map kitty_mod+q     close_tab
# map kitty_mod+.     move_tab_forward
# map kitty_mod+,     move_tab_backward
# map kitty_mod+alt+t set_tab_title
#
# You can also create shortcuts to go to specific tabs, with 1 being
# the first tab::
#
#     map ctrl+alt+1 goto_tab 1
#     map ctrl+alt+2 goto_tab 2
#
# Just as with new_window above, you can also pass the name of
# arbitrary commands to run when using new_tab and use
# new_tab_with_cwd.
#
# -----------------------------------------------------------------------------
# Layout management
#
# map kitty_mod+l next_layout
#
# You can also create shortcuts to switch to specific layouts::
#
#     map ctrl+alt+t goto_layout tall
#     map ctrl+alt+s goto_layout stack
#
# -----------------------------------------------------------------------------
# Font sizes
#
# You can change the font size for all top-level kitty windows at a
# time or only the current one.
#
# map kitty_mod+equal     change_font_size all +2.0
# map kitty_mod+minus     change_font_size all -2.0
# map kitty_mod+backspace change_font_size all 0
#
# To setup shortcuts for specific font sizes::
#
#     map kitty_mod+f6 change_font_size all 10.0
#
# To setup shortcuts to change only the current window's font size::
#
#     map kitty_mod+f6 change_font_size current 10.0
#
# -----------------------------------------------------------------------------
# Select and act on visible text
#
# Use the hints kitten to select text and either pass it to an
# external program or insert it into the terminal or copy it to the
# clipboard.
#
# map kitty_mod+e kitten hints

# Open a currently visible URL using the keyboard. The program used
# to open the URL is specified in open_url_with.
#
# map kitty_mod+p>f kitten hints --type path --program -

# Select a path/filename and insert it into the terminal. Useful, for
# instance to run git commands on a filename output from a previous
# git command.
#
# map kitty_mod+p>shift+f kitten hints --type path

# Select a path/filename and open it with the default open program.
#
# map kitty_mod+p>l kitten hints --type line --program -

# Select a line of text and insert it into the terminal. Use for the
# output of things like: ls -1
#
# map kitty_mod+p>w kitten hints --type word --program -

# Select words and insert into terminal.
#
# map kitty_mod+p>h kitten hints --type hash --program -

# Select something that looks like a hash and insert it into the
# terminal. Useful with git, which uses sha1 hashes to identify
# commits

# The hints kitten has many more modes of operation that you can map
# to different shortcuts. For a full description see kittens/hints.

# -----------------------------------------------------------------------------
# Miscellaneous

# map kitty_mod+f11    toggle_fullscreen
# map kitty_mod+u      kitten unicode_input
# map kitty_mod+f2     edit_config_file
# map kitty_mod+escape kitty_shell window

# Open the kitty shell in a new window/tab/overlay/os_window to
# control kitty using commands.
#
# map kitty_mod+a>m    set_background_opacity +0.1
# map kitty_mod+a>l    set_background_opacity -0.1
# map kitty_mod+a>1    set_background_opacity 1
# map kitty_mod+a>d    set_background_opacity default
# map kitty_mod+delete clear_terminal reset active

# You can create shortcuts to clear/reset the terminal. For example::
#
#     map kitty_mod+f9 clear_terminal reset active
#     map kitty_mod+f10 clear_terminal clear active
#     map kitty_mod+f11 clear_terminal scrollback active
#
# These will reset screen/clear screen/clear screen+scrollback
# respectively. If you want to operate on all windows instead of just
# the current one, use all instead of :italic`active`.


# You can tell kitty to send arbitrary (UTF-8) encoded text to the
# client program when pressing specified shortcut keys. For example::
#
#     map ctrl+alt+a send_text all Special text
#
# This will send "Special text" when you press the ctrl+alt+a key
# combination.  The text to be sent is a python string literal so you
# can use escapes like \x1b to send control codes or \u21fb to send
# unicode characters (or you can just input the unicode characters
# directly as UTF-8 text). The first argument to send_text is the
# keyboard modes in which to activate the shortcut.
# The possible values are normal or application or kitty or a comma separated
# combination of them.
# The special keyword all means all modes.
# The modes normal and application refer to the DECCKM cursor key mode
# for terminals, and kitty refers to the special kitty extended
# keyboard protocol.

# Another example, that outputs a word and then moves the cursor to
# the start of the line (same as pressing the Home key)::
#
#     map ctrl+alt+a send_text normal Word\x1b[H
#     map ctrl+alt+a send_text application Word\x1bOH

# -----------------------------------------------------------------------------
# default key mapping:
#
# Key mapping
# For a list of key names, see: http://www.glfw.org/docs/latest/group__keys.html
# For a list of modifier names, see: http://www.glfw.org/docs/latest/group__mods.html
#
# You can use the special action no_op to unmap a keyboard shortcut that is
# assigned in the default configuration.
#
# You can combine multiple actions to be triggered by a single shortcut, using the
# syntax below:
# map key combine <separator> action1 <separator> action2 <separator> action3 ...
# For example:
# map kitty_mod+e combine : new_window : next_layout
# this will create a new window and switch to the next available layout

# Clipboard
# map kitty_mod+v            paste_from_clipboard
# map kitty_mod+s            paste_from_selection
# map kitty_mod+c            copy_to_clipboard
# map shift+insert           paste_from_selection
# You can also pass the contents of the current selection to any program using
# pass_selection_to_program. By default, the system's open program is used, but
# you can specify your own, for example:
# map kitty_mod+o            pass_selection_to_program firefox
# map kitty_mod+o            pass_selection_to_program

# Scrolling
# map kitty_mod+up           scroll_line_up
# map kitty_mod+down         scroll_line_down
# map kitty_mod+k            scroll_line_up
# map kitty_mod+j            scroll_line_down
# map kitty_mod+page_up      scroll_page_up
# map kitty_mod+page_down    scroll_page_down
# map kitty_mod+home         scroll_home
# map kitty_mod+end          scroll_end
# map kitty_mod+h            show_scrollback

# Window management
# map kitty_mod+enter        new_window
# map kitty_mod+n            new_os_window
# map kitty_mod+w            close_window
# map kitty_mod+]            next_window
# map kitty_mod+[            previous_window
# map kitty_mod+f            move_window_forward
# map kitty_mod+b            move_window_backward
# map kitty_mod+`            move_window_to_top
# map kitty_mod+r             start_resizing_window
# Switching to a particular window
# map kitty_mod+1            first_window
# map kitty_mod+2            second_window
# map kitty_mod+3            third_window
# map kitty_mod+4            fourth_window
# map kitty_mod+5            fifth_window
# map kitty_mod+6            sixth_window
# map kitty_mod+7            seventh_window
# map kitty_mod+8            eighth_window
# map kitty_mod+9            ninth_window
# map kitty_mod+0            tenth_window
#
# You can open a new window running an arbitrary program, for example:
# map kitty_mod+y            new_window mutt
#
# You can pass the current selection to the new program by using the @selection placeholder
# map kitty_mod+y            new_window less @selection
#
# You can even send the contents of the current screen + history buffer as stdin using
# the placeholders @text (which is the plain text) and @ansi (which includes text styling escape codes).
# For only the current screen, use @screen or @ansi_screen.
# map kitty_mod+y            new_window @ansi less +G -R
#
# You can open a new window with the current working directory set to the
# working directory of the current window using
# map ctrl+alt+enter          new_window_with_cwd

# Tab management
# map kitty_mod+right        next_tab
# map kitty_mod+left         previous_tab
# map kitty_mod+t            new_tab
# map kitty_mod+q            close_tab
# map kitty_mod+l            next_layout
# map kitty_mod+.            move_tab_forward
# map kitty_mod+,            move_tab_backward
# You can also create shortcuts to go to specific tabs, with 1 being the first tab
# map ctrl+alt+1              goto_tab 1
# map ctrl+alt+2              goto_tab 2

# Just as with new_window above, you can also pass the name of arbitrary
# commands to run when using new_tab and use new_tab_with_cwd.


# Miscellaneous
# map kitty_mod+equal        increase_font_size
# map kitty_mod+minus        decrease_font_size
# map kitty_mod+backspace    restore_font_size
# map kitty_mod+f11          toggle_fullscreen
# map kitty_mod+u            input_unicode_character
# Open a currently visible URL using the keyboard. The program used ot open the URL is specified in open_url_with.
# You can customize how the URLs are detected and opened by specifying command line options to
# url_hints. For example:
# map kitty_mod+e            run_simple_kitten text url_hints --program firefox --regex "http://[^ ]+"
# map kitty_mod+e            run_simple_kitten text url_hints

# Sending arbitrary text on shortcut key presses
# You can tell kitty to send arbitrary (UTF-8) encoded text to
# the client program when pressing specified shortcut keys. For example:
#
# map ctrl+alt+a send_text all Special text
#
# This will send "Special text" when you press the Ctrl+Alt+a key combination.
# The text to be sent is a python string literal so you can use escapes like
# \x1b to send control codes or \u21fb to send unicode characters (or you can
# just input the unicode characters directly as UTF-8 text). The first argument
# to send_text is the keyboard modes in which to activate the shortcut. The possible
# values are normal or application or kitty or a comma separated combination of them.
# The special keyword all means all modes. The modes normal and application refer to
# the DECCKM cursor key mode for terminals, and kitty refers to the special kitty
# extended keyboard protocol. Another example, that outputs a word and then moves the cursor
# to the start of the line (same as pressing the Home key):
#
# map ctrl+alt+a send_text normal Word\x1b[H
# map ctrl+alt+a send_text application Word\x1bOH
#
# -----------------------------------------------------------------------------
# Symbol Name		Hexadecimal Encoding
#   <NUL>			\x00
#   <SOH>			\x01
#   <STX>			\x02
#   <ETX>			\x03
#   <EOT>			\x04
#   <ENQ>			\x05
#   <ACK>			\x06
#   <alert>		\x07
#   <backspace>		\x08
#   <tab>			\x09
#   <newline>		\x0A
#   <vertical-tab>	\x0B
#   <form-feed>		\x0C
#   <carriage-return>	\x0D
#   <SO>			\x0E
#   <SI>			\x0F
#   <DLE>			\x10
#   <DC1>			\x11
#   <DC2>			\x12
#   <DC3>			\x13
#   <DC4>			\x14
#   <NAK>			\x15
#   <SYN>			\x16
#   <ETB>			\x17
#   <CAN>			\x18
#   <EM>			\x19
#   <SUB>			\x1A
#   <ESC>			\x1B
#   <IS4>			\x1C
#   <IS3>			\x1D
#   <IS2>			\x1E
#   <IS1>			\x1F
#   <space>		\x20
#   <exclamation-mark>	\x21
#   <quotation-mark>	\x22
#   <number-sign>		\x23
#   <dollar-sign>		\x24
#   <percent>		\x25
#   <ampersand>		\x26
#   <apostrophe>		\x27
#   <left-parenthesis>	\x28
#   <right-parenthesis>	\x29
#   <asterisk>		\x2A
#   <plus-sign>		\x2B
#   <comma>		\x2C
#   <hyphen>		\x2D
#   <period>		\x2E
#   <slash>		\x2F
#   <0>		\x30
#   <1>			\x31
#   <2>			\x32
#   <3>		\x33
#   <4>		\x34
#   <5>		\x35
#   <6>			\x36
#   <7>		\x37
#   <8>		\x38
#   <9>		\x39
#   <colon>		\x3A
#   <semi-colon>		\x3B
#   <less-than>		\x3C
#   <equal-sign>		\x3D
#   <greater-than>	\x3E
#   <question-mark>	\x3F
#   <commercial-at>	\x40
#   <A>			\x41
#   <B>			\x42
#   <C>			\x43
#   <D>			\x44
#   <E>			\x45
#   <F>			\x46
#   <G>			\x47
#   <H>			\x48
#   <I>			\x49
#   <J>			\x4A
#   <K>			\x4B
#   <L>			\x4C
#   <M>			\x4D
#   <N>			\x4E
#   <O>			\x4F
#   <P>			\x50
#   <Q>			\x51
#   <R>			\x52
#   <S>			\x53
#   <T>			\x54
#   <U>			\x55
#   <V>			\x56
#   <W>			\x57
#   <X>			\x58
#   <Y>			\x59
#   <Z>			\x5A
#   <left-bracket>	\x5B
#   <backslash>		\x5C
#   <right-bracket>	\x5D
#   <circumflex>		\x5E
#   <underscore>		\x5F
#   <grave-accent>	\x60
#   <a>			\x61
#   <b>			\x62
#   <c>			\x63
#   <d>			\x64
#   <e>			\x65
#   <f>			\x66
#   <g>			\x67
#   <h>			\x68
#   <i>			\x69
#   <j>			\x6A
#   <k>			\x6B
#   <l>			\x6C
#   <m>			\x6D
#   <n>			\x6E
#   <o>			\x6F
#   <p>			\x70
#   <q>			\x71
#   <r>			\x72
#   <s>			\x73
#   <t>			\x74
#   <u>			\x75
#   <v>			\x76
#   <w>			\x77
#   <x>			\x78
#   <y>			\x79
#   <z>			\x7A
#   <left-brace>		\x7B
#   <vertical-line>	\x7C
#   <right-brace>		\x7D
#   <tilde>		\x7E
#   <DEL>			\x7F
#
# -----------------------------------------------------------------------------
# vim:ft=kitty
